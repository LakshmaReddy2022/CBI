{"version":3,"sources":["../src/cache.js"],"names":["globalCache","WeakMap","getItem","func","config","args","cache","updaters","Set","length","normalizer","stringify","removeItem","get","delete","CacheContext","useItem","memoized","cleanupTimeout","clearTimeout","setTimeout","size","cancel"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,WAAW,GAAG,IAAIC,OAAJ,EAApB;;AAEO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAA0D;AAAA,MAArBC,KAAqB,uEAAbN,WAAa;AAC/D,SAAO,gCACL,gCAAIM,KAAJ,EAAWH,IAAX,EAAiB;AAAA,WAAM,IAAIF,OAAJ,EAAN;AAAA,GAAjB,CADK,EAELG,MAFK,EAGL;AAAA,WACE,uBACE;AAAA,aAAO;AACLG,QAAAA,QAAQ,EAAE,IAAIC,GAAJ;AADL,OAAP;AAAA,KADF;AAKIC,MAAAA,MAAM,EAAE,KALZ;AAMIC,MAAAA,UAAU,EAAEC;AANhB,OAOOP,MAPP,EADF;AAAA,GAHK,iDAcFC,IAdE,EAAP;AAeD;;AAED,SAASO,UAAT,CAAoBT,IAApB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAA6D;AAAA;;AAAA,MAArBC,KAAqB,uEAAbN,WAAa;;AAC3D,oBAAAM,KAAK,CACFO,GADH,CACOV,IADP,EAEGU,GAFH,CAEOT,MAFP,GAGGU,MAHH,wDAGaT,IAHb;AAID;;AAEM,IAAMU,YAAY,gBAAG,0BAAcf,WAAd,CAArB;;;AAEA,SAASgB,OAAT,GAA0B;AAAA,oCAANX,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC/B,MAAMC,KAAK,GAAG,uBAAWS,YAAX,CAAd;AACA,MAAME,QAAQ,GAAGf,OAAO,MAAP,SAAWG,IAAX,SAAiBC,KAAjB,GAAjB;AACA,wBAAU,YAAM;AACd,QAAQC,QAAR,GAAqCU,QAArC,CAAQV,QAAR;AAAA,QAAkBW,cAAlB,GAAqCD,QAArC,CAAkBC,cAAlB;;AACA,QAAIA,cAAJ,EAAoB;AAClBC,MAAAA,YAAY,CAACD,cAAD,CAAZ;AACD;;AACD,WAAO,YAAM;AACXD,MAAAA,QAAQ,CAACC,cAAT,GAA0BE,UAAU,CAAC,YAAM;AACzC,YAAI,CAACb,QAAQ,CAACc,IAAd,EAAoB;AAAA;;AAClB,8BAAAJ,QAAQ,CAACK,MAAT,2EAAAL,QAAQ;AACRL,UAAAA,UAAU,MAAV,SAAcP,IAAd,SAAoBC,KAApB;AACD;AACF,OALmC,EAKjC,CALiC,CAApC;AAMD,KAPD,CALc,CAad;AACD,GAdD,EAcG,CAACW,QAAD,CAdH;AAeA,SAAOA,QAAP;AACD","sourcesContent":["import get from '@postinumero/map-get-with-default';\nimport stringify from 'fast-json-stable-stringify';\nimport memoize from 'memoizee';\nimport { createContext, useContext, useEffect } from 'react';\n\nconst globalCache = new WeakMap();\n\nexport function getItem(func, config, args, cache = globalCache) {\n  return get(\n    get(cache, func, () => new WeakMap()),\n    config,\n    () =>\n      memoize(\n        () => ({\n          updaters: new Set(),\n        }),\n        {\n          length: false,\n          normalizer: stringify,\n          ...config,\n        }\n      )\n  )(...args);\n}\n\nfunction removeItem(func, config, args, cache = globalCache) {\n  cache\n    .get(func)\n    .get(config)\n    .delete(...args);\n}\n\nexport const CacheContext = createContext(globalCache);\n\nexport function useItem(...args) {\n  const cache = useContext(CacheContext);\n  const memoized = getItem(...args, cache);\n  useEffect(() => {\n    const { updaters, cleanupTimeout } = memoized;\n    if (cleanupTimeout) {\n      clearTimeout(cleanupTimeout);\n    }\n    return () => {\n      memoized.cleanupTimeout = setTimeout(() => {\n        if (!updaters.size) {\n          memoized.cancel?.();\n          removeItem(...args, cache);\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [memoized]);\n  return memoized;\n}\n"],"file":"cache.js"}