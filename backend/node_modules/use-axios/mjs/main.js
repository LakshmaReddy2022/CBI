import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { create as createUseAsync } from '@postinumero/use-async';
import axios from 'axios';
import obsoleteWithReplacement from './utils/obsoleteWithReplacement.js';
export var create = function create(config) {
  var _createUseAsync = createUseAsync(typeof config === 'function' ? config : axios.create(config)),
      _createUseAsync2 = _slicedToArray(_createUseAsync, 3),
      useAxios = _createUseAsync2[0],
      refetch = _createUseAsync2[1],
      useAxiosSafe = _createUseAsync2[2];

  return {
    useAxios: useAxios,
    refetch: refetch,
    useAxiosSafe: useAxiosSafe
  };
};

var _create = create(axios),
    useAxios = _create.useAxios,
    refetch = _create.refetch,
    useAxiosSafe = _create.useAxiosSafe;

export { useAxios as default, useAxios, refetch, useAxiosSafe };
export var reload = obsoleteWithReplacement(refetch, '`reload` function', '`refetch` function');
//# sourceMappingURL=main.js.map